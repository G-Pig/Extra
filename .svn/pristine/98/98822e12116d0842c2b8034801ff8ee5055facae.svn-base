/**
 * Created by liulin on 2016/12/19.
 *
 * 其他项目的基础panel
 *
 * 容器 tab 加载项
 *
 *
 * 包括 2 个部分，
 * 一个部分为查询面板
 *
 * 一个部分为 车辆列表
 *
 * 要支持2种
 * 一种为全加载
 * 一种为部分加载
 */


    ES.MapView.BaseTabPanel = ES.Evented.extend({



    oOption: {

        bIsCreate: true,

        // 初始化监听事件
        cEvenName: 'MV:VehSitePanel.initVehSite',

        // 加载的父级容器
        cPContainer: '.ex-layout-main',

        // 当前面板标志
        cFlag: 'panelFlag',

        cTitle: '工地搜索车辆',

        // -- 界面加载完成 后触发的事件,url 加载
        cEventNameTabLoad: 'MapView:TabPanel.TabLoad',


    },

    initialize: function (oParent, oOption) {
        ES.setOptions(this, oOption);
        this._oParent = oParent;
        this._oPage = oParent._oParent
        // 保存当前页面对象
        this.$_oContainer = null;

        // 车辆list
        this.oListView =null;
        
        // 查询list
        this.oStrcukBox = null;

        //普通list
        this.oViewBox = null;
        
        // 简化变量定义
        this.cFlag = this.oOption.cFlag;

        this.initOn();

        this.initUI();
    },

    initUI: function () {

        if (!this.oOption.bIsCreate) {
            return;
        }
        this.$_oContainer = $(this.cHTML);
        this.$_oContainer.addClass(this.oOption.cFlag);

        $(this.oOption.cPContainer).append(this.$_oContainer);
        this._oParent.fire(this.oOption.cEventNameTabLoad, {cFlag: this.oOption.cFlag});

        // 车辆列表结构
        this.initListView();

        // 查询过滤树结构
        this.initPanel();

        //  普通面板
        this.initView();

        this.setWidth(this.oOption.nInitWidth);

        if(!this.oStrcukBox) {
            if(!this.oViewBox){
                this.oListView.hideBtn();
            }
        }

        if(!this.oOption.closeList){
            this.oListView.hide()
        }

    },
    //初始化 普通面板 自定义
    initView:function(){
        if(!this.oOption.cViewObject) {
            return;
        }
        var oTemp = eval(this.oOption.cViewObject);

        this.oViewBox = new oTemp(this, {
            cDivContainerSel:this.$_oContainer,
            cCheckEventName: this.oOption.cViewUrl,
            cTitle: this.oOption.cViewTitle
        });

    },

    // 初始化 树列表 查询需要
    initPanel: function () {

        if(!this.oOption.cTreeObject) {
            return;
        }

        var oTemp = eval(this.oOption.cTreeObject);

        this.oStrcukBox = new oTemp(this, {
                // 树的顶级容器，不是树容器
                cPContainer: this.$_oContainer,
                cTitle: this.oOption.cTreeTitle,
                cCheckEventName:this.oOption.cCheckEventName,
                cUncheckEventName:this.oOption.cUncheckEventName,
            },
            ES.MapView.oConfig[this.oOption.cTreeUrl]);

    },

    // 初始化面板数据cListView
    initListView: function () {
        if (!this.oOption.cListObject) {
            return;
        }

        var oTemp = eval(this.oOption.cListObject);

        // list 控件
        this.oListView = new oTemp(this, {
            // 树的顶级容器，不是树容器
            cDivContainerSel: this.$_oContainer,
            cTitle: this.oOption.cListTitle,
            nPageSize: 50,
            cUrl: ES.MapView.oConfig[this.oOption.cListUrl],
            cCheckEventName: this.oOption.cCheckEventName,
            cUncheckEventName: this.oOption.cUncheckEventName,
        });
        var $_oContainer = this.oListView.getPanel();

        // 分页控件
        this.oPager = new ES.MapView.BaseTabPanel.BasePager(this, {
            nPageSize: ES.MapView.oConfig.nMaxPageSize,
            $_oContainer: $_oContainer, nBtnCnt: ES.MapView.oConfig.nPagerBtnCnt || 8,
        });
    },

    // 监听事件
    initOn: function () {
        //this._oParent.on(this.oOption.cEvenName, this.initTabPanel, this);
        //this._oParent.on('flishLoaded', this.loadTree, this);
    },

    // 显示查询面板
    showBox: function () {
        if (!this.$_oContainer) {
            return;
        }
        this.$_oContainer.fadeIn(500);
        //this.$_oContainer.show();
        //this._oParent.resize(400);
        if (this.oStrcukBox) {
            this.oStrcukBox.onOffCtrl(false);
        }

        //this.$_oContainer.width(this.getWidth());
    },

    // 隐藏查询面板
    hideBox: function () {
        //this.$_oContainer.hide();
        this.$_oContainer.fadeOut(500);
        //this._oParent.resize(120);
        if(this.oStrcukBox){
            this.oStrcukBox.onOffCtrl(true);
        }
    },

    getWidth: function () {
        //var nWidth = 0;
        // if (this.oListView) {
        //     nWidth = this.oListView.getWidth();
        // }
        //
        // if (this.oStrcukBox) {
        //     nWidth =nWidth+ this.oStrcukBox.getWidth();
        // }

        return this.$_oContainer.width();
    },

    // 设置容器的宽度，用于缓存
    setWidth:function (nWidth) {
        this.$_oContainer.css({width: nWidth});

        this.nWidth = nWidth;
    },
});

// html 数据
ES.MapView.BaseTabPanel.include({

    cHTML:'<div class="ex-layout-sider ec-fr">',

});
