//弹窗详情页
ES.Common.Detail = ES.Common.BaseDialog.extend({
    afterOpen: function (id) {
        this.oModelGrid = new ES.Muck.ModelGrid(this, {
            // 容器
            cContainer: '.ex-Permit-VehicleModel',
            // grid id
            cGridContainer: 'VehicleModelGridContainer',
            // 分页菜单id
            cPagerContainer: 'VehicleModelGridToolBarContainer',
        }, {
            url: '/UploadSite/GetUploadSite',

            postData:{
                exparameters: {
                    UploadSiteId: this.oBusData
                }
            },
            multiselect: false,
            rowNum: 100000
        });
        var nW = $('.ex-Permit-VehicleModel').width();
        var nH = $('.ex-Permit-VehicleModel').parent().height() - 225;

        this.oModelGrid.initGrid({ width: nW, height: nH });
    },
    del: function (oData) {
        this.oBusData = oData;
        this.hideFooter();
        this.oDialog.showModal();
    }
});
//上传车辆弹出层
ES.Common.uploadEdit = ES.Evented.extend({
    initialize: function (oParent, oOption, oDOption) {
        this._oParent = oParent;
        ES.setOptions(this, oOption);
        this.oDOption = {};
        this.initButton();
        this.initDialog();
        this.initEvent();
        this.initUI();
        this.oEnterpriceInsideTree = new ES.Common.SelectTreeNodeW(null, { cBandSel: $("#EnterpriceInside") },
            {
                core: {
                    'animation': 0,
                    'check_callback': true,
                    'state': { 'opened': true },
                    'data': {
                        'url': '/Enterprise/Tree',
                    }
                },
                plugins: ["search"],
            });
        this.oEnterpriceInsideTree.on("selectVal", function (oData) {
            if (oData.data.type <= 2) {
                ES.aWarn("请选择公司！")
            } else {
                $("#s_h_EnterpriceInside").val(oData.id);
                $("#EnterpriceInside").val(oData.text);
                $('.ex-cover-tree-select').hide().siblings('div').hide();
            }
        });
        this.oSiteTree = new ES.Common.SelectTreeNodeW(null, { cBandSel: $("#Site") },
            {
                core: {
                    'animation': 0,
                    'check_callback': true,
                    'state': { 'opened': true },
                    'data': {
                        'url': '/Site/Tree',
                    }
                },
                plugins: ["search"],
            });
        this.oSiteTree.on("selectVal", function (oData) {
            if (oData.data.type <= 2) {
                ES.aWarn("请选择工地！")
            } else {
                $("#s_h_Site").val(oData.id *-1);
                $("#Site").val(oData.text);
                $('.ex-cover-tree-select').hide().siblings('div').hide();
            }
        });
    },
    initDialog: function () {
        var oDOption = {
            fixed: true,
            align: 'right bottom',
            title: '工地上报车辆',
            content: template('AddSiterReportsTpl', this.oOption.oModel)
        };
        ES.extend(oDOption, this.oDOption)
        var oDiaLog = dialog(oDOption);
        this.oDialog = oDiaLog;
        return oDiaLog;
    },
    showModal: function (oData) {
        this.oBusData = oData;
        this.oDialog.title('上传车辆');

        this.oDialog.showModal();
    },
    // 初始化界面对象
    initUI: function () {
        var exparameters = {};
        if(this.oOption.oModel){
            exparameters = {
                EnterpriceId: this.oOption.oModel.EnterpriceId,
                VehcleNoS: this.oOption.oModel.Vehiclelis,
                SiteId: this.oOption.oModel.SiteId,
                UploadSiteId: this.oOption.oModel.Id,
            }
        }
        // grid 查询
        this.oGrid = new ES.Muck.uploadGrid(this, {
            cContainer: '.ec-u-sm-12',
            cGridContainer: 'dtGridSiteReportsContainer',
            cPagerContainer: ''
        }, {
            url: '/UploadSite/GetStatusByVehcleNo',
            postData: {
                exparameters: exparameters
            },
            jsonReader: {
                root: "dataList"
            },
            multiselect:false,
            rowNum: 100000,
        });

        var nW = $(".dtGridSiteReportsContainer").width();
        var nH = 195;

        this.oGrid.initGrid({ width: nW, height: nH });

        // 分析按钮
        this.oDialogBtn = new ES.Muck.DialogBtn(this, {});

    },
    initEvent: function () {
        if (!this.oDialog) {
            return;
        }
        var self = this;
        this.oDialog.addEventListener('show', function () {
            if (self.afterOpen) {
                self.afterOpen();
            }
        });

        this.oDialog.addEventListener('close', function () {
            if (self.afterClose) {
                self.afterClose();
            }
        });
    },
    //初始化确定取消按钮
    initButton: function () {
        var self = this;
        var aoButton = [
            {
                value: ES.Lang.BaseDialog[1],
                callback: function () {
                    self.save();
                    return false;
                },
                autofocus: true
            },
            {
                value: ES.Lang.BaseDialog[2],//取消
                callback: function () {
                    if (self.oOption.bRemove) {
                        this.remove();
                    }
                    else {
                        this.close();
                    }
                    return false;
                }
            },
        ];
        this.oDOption.button = aoButton;
    },
    save: function () {
        var gridData = this.oGrid.gridData;
        if (gridData.dataList.length == 0) {
            ES.aWarn("请分析车辆到表格！"); return
        }
        if (!$('#EnterpriceInside').val()) {
            ES.aWarn("请选择企业"); return
        }
        var Vehiclelis = [], status, oParams, UploadSiteId, newVehicles;
        if (gridData.exparameters.UploadSiteId) {
            UploadSiteId = gridData.exparameters.UploadSiteId
        } else {
            UploadSiteId = null;
        }
        for (var i = 0; i < gridData.dataList.length; i++) {
            if (!gridData.dataList[i].Status) {
                status = 0;
            } else {
                status = gridData.dataList[i].Status;
            }
            newVehicles = {
                VehicleId: gridData.dataList[i].VehicleId,
                EnterpriceId: gridData.dataList[i].EnterpriceId,
                Status: status,
                UploadSiteId: UploadSiteId
            }
            Vehiclelis.push(newVehicles);//作废的车辆的ID和企业Id和车辆的状态
        }
        oParams = {
            SiteId: $('#s_h_Site').val(),
            EnterpriceId: $('#s_h_EnterpriceInside').val(),
            CheckOlineRate:$('#reportsTotal').text().replace("%","")
        };
        ES.loadAn($(this.oDialog.node));
        ES.getData({ siteMod: oParams, Vehiclelis: Vehiclelis}, "/UploadSite/SetUploadSiteByVehcleNos", this.saveHandler, this);//第一次上报
    },

    saveHandler: function (oData) {
        ES.Common.DialogEdit.prototype.saveHandler.call(this, oData);
        if (oData.IsSuccess) {
            this._oParent.oGrid.query({});
        }
    },
});
//重新上传车辆弹出层
ES.Common.ReuploadEdit = ES.Evented.extend({
    initialize: function (oParent, oOption, oDOption) {

        //this.oGridOpt = oGridOpt;
        this._oParent = oParent;
        ES.setOptions(this, oOption);
        this.oDOption = {};

        this.initButton();

        this.initDialog();

        this.initEvent();

        this.initUI();
        this.newData;
    },
    initDialog: function () {
        var oDOption = {
            fixed: true,
            align: 'right bottom',
            title: '工地上报车辆',
            content: template('ReuploadSiterReportsTpl', this.oOption.oModel)
        };
        ES.extend(oDOption, this.oDOption)
        var oDiaLog = dialog(oDOption);
        this.oDialog = oDiaLog;
        return oDiaLog;
    },
    showModal: function (oData) {
        this.oBusData = oData;
        this.oDialog.title('重新上传车辆');

        this.oDialog.showModal();
    },
    // 初始画界面对象
    initUI: function () {
        var exparameters = {};
        if (this.oOption.oModel) {
            exparameters = {
                EnterpriceId: this.oOption.oModel.EnterpriceId,
                VehcleNoS: this.oOption.oModel.Vehiclelis,
                SiteId: this.oOption.oModel.SiteId,
                UploadSiteId: this.oOption.oModel.Id,
                OlineRate:this.oOption.oModel.OlineRate
            }
        }
        // grid 查询
        this.oGrid = new ES.Muck.ReuploadGrid(this, {
            cContainer: '.ex-selcar-content',
            cGridContainer: 'dtGridSiteReportsContainer',
            cPagerContainer: ''
        }, {
            url: '/UploadSite/GetStatusByVehcleNo',
            postData: {
                exparameters: exparameters
            },
            jsonReader: {
                root: "dataList"
            },
            multiselect: false,
            rowNum: 100000,
            loadError: function (xhr, status, error) {
                console.log(xhr)
            }
        });

        var nW = $(".dtGridSiteReportsContainer").width();
        var nH = 195;

        this.oGrid.initGrid({ width: nW, height: nH });

        // 分析按钮
        this.oReDialogBtn = new ES.Muck.ReDialogBtn(this, {});

    },
    initEvent: function () {
        if (!this.oDialog) {
            return;
        }
        var self = this;
        this.oDialog.addEventListener('show', function () {
            if (self.afterOpen) {
                self.afterOpen();
            }

        });

        this.oDialog.addEventListener('close', function () {
            if (self.afterClose) {
                self.afterClose();
            }
        });
    },
    //初始化确定取消按钮
    initButton: function () {
        var self = this;
        var aoButton = [
            {
                value: ES.Lang.BaseDialog[1],
                callback: function () {
                    self.save();
                    return false;
                },
                autofocus: true
            },
            {
                value: ES.Lang.BaseDialog[2],//取消
                callback: function () {
                    if (self.oOption.bRemove) {
                        this.remove();
                    }
                    else {
                        this.close();
                    }
                    return false;
                }
            },
        ];
        this.oDOption.button = aoButton;
    },
    afterOpen: function () {

    },
    save: function () {
        var gridData = this.oGrid.gridData;
        if (gridData.dataList.length == 0) {
            ES.aWarn("请分析车辆到表格！"); return
        }
        if (!$('#EnterpriceInside').val()) {
            ES.aWarn("请选择企业"); return
        }
        var Vehiclelis = [], status, oParams, UploadSiteId, newVehicles,IsNotHasCancelArr=[],IsNotHasCancel=0;
        if (gridData.exparameters.UploadSiteId) {
            UploadSiteId = gridData.exparameters.UploadSiteId
        } else {
            UploadSiteId = null;
        }
        for (var i = 0; i < gridData.dataList.length; i++) {
            if (!gridData.dataList[i].Status) {
                status = 0;
            } else {
                status = gridData.dataList[i].Status;
            }
            newVehicles = {
                VehicleId: gridData.dataList[i].VehicleId,
                EnterpriceId: gridData.dataList[i].EnterpriceId,
                Id:gridData.dataList[i].Id,
                Status: status,
                UploadSiteId: UploadSiteId
            }
            IsNotHasCancelArr.push(status);
            Vehiclelis.push(newVehicles);//作废的车辆的ID和企业Id和车辆的状态
        };
        if(IsNotHasCancelArr.indexOf(3)>-1){
            IsNotHasCancel = 1
        }
         oParams = {
            SiteId: $('#Site').val(),
            EnterpriceId: $('#EnterpriceInside').val(),
            Id: UploadSiteId,
             IsNotHasCancel: IsNotHasCancel,
             CheckOlineRate:$('#reportsTotal').text().replace("%","")
         };
        ES.loadAn($(this.oDialog.node));
        ES.getData({ siteMod: oParams, Vehiclelis: Vehiclelis}, "/UploadSite/UpdateUploadSiteByVehcleNos", this.saveHandler, this);//重新上报
    },

    saveHandler: function (oData) {
        ES.Common.DialogEdit.prototype.saveHandler.call(this, oData);
        if (oData.IsSuccess) {
            this._oParent.oGrid.query({});
        }
    },
});
//审核页面
ES.Common.ExamineAdvice = ES.Evented.extend({
    initialize: function (oParent, oOption, oDOption) {

        this._oParent = oParent;
        ES.setOptions(this, oOption);
        this.oDOption = {};

        this.initButton();

        this.initDialog();

        this.initEvent();

        this.initUI();
        this.newData;
    },
    initDialog: function () {
        var oDOption = {
            fixed: true,
            align: 'right bottom',
            title: '工地审批',
            content: template('ExamineAdviceTpl', this.oOption.oModel)
        };
        ES.extend(oDOption, this.oDOption)
        var oDiaLog = dialog(oDOption);
        this.oDialog = oDiaLog;
        return oDiaLog;
    },
    showModal: function (oData) {
        this.oBusData = oData;
        this.oDialog.title('工地审批');

        this.oDialog.showModal();
    },
    // 初始画界面对象
    initUI: function () {
        var exparameters = {};
        if (this.oOption.oModel) {
            exparameters = {
                EnterpriceId: this.oOption.oModel.EnterpriceId,
                VehcleNoS: this.oOption.oModel.Vehiclelis,
                SiteId: this.oOption.oModel.SiteId,
                UploadSiteId: this.oOption.oModel.Id,
            }
        }
        // grid 查询
        this.oGrid = new ES.Muck.ExamineGrid(this, {
            cContainer: '.ex-site-users-bottom',
            cGridContainer: 'exGridContainer',
            cPagerContainer: ''
        }, {
            url: '/UploadSite/GetStatusByVehcleNo',
            postData: {
                exparameters: exparameters
            },
            jsonReader: {
                root: "dataList"
            },
            multiselect: true,
            rowNum: 100000,
        });

        var nW = $(".exGridContainer").width();
        var nH = 180;

        this.oGrid.initGrid({ width: nW, height: nH });
    },
    initEvent: function () {
        if (!this.oDialog) {
            return;
        }
        var self = this;
        this.oDialog.addEventListener('show', function () {
            if (self.afterOpen) {
                self.afterOpen();
            }

        });

        this.oDialog.addEventListener('close', function () {
            if (self.afterClose) {
                self.afterClose();
            }
        });
    },
    //初始化整改、同意、关闭按钮
    initButton: function () {
        var self = this;
        var aoButton = [
            {
                id: "reform",
                value: "整改",
                callback: function () {
                    self.reform();
                    return false;
                },
            },
            {
                id: "agree",
                value: "同意",
                callback: function () {
                    self.save();
                    return false;
                },
                autofocus: true
            },
            {
                value: ES.Lang.BaseDialog[2],//取消
                callback: function () {
                    if (self.oOption.bRemove) {
                        this.remove();
                    }
                    else {
                        this.close();
                    }
                    return false;
                }
            },
        ];
        this.oDOption.button = aoButton;
    },
    afterOpen: function () {
        $('.ui-dialog-button>button:eq(0)').css({backgroundColor:"red",color:"white"})
    },
    reform: function () {
        //整改的回调函数
        if (!$('#siteReportsInput').val()) {
            ES.aWarn("请填写审核意见"); return
        }
        var newArr = [], self = this, arrItem, temp = [], temparray = [], reformVehicles = {};
        var ids = $("#exGridContainer").jqGrid("getGridParam", "selarrrow");//获取所有选择项
        if(ids.length == 0){
            ES.aWarn("请选择车辆！"); return
        }
        var UploadSiteId = this.oGrid.gridData.exparameters.UploadSiteId;//外面表格的行Id
        for (var i = 0 ; i < ids.length; i++) {
            rowData = $("#exGridContainer").jqGrid('getRowData', ids[i]);//获取所有选择项的具体数据
            arrItem = {
                VehicleId: rowData.VehicleId,//表格里的选择的车牌Id
                EnterpriceId: rowData.EnterpriceId,//表格里的选择的公司Id
                Id:rowData.Id,
                UploadSiteId: UploadSiteId,
                Status: 2
            };
            newArr.push(arrItem);//得到新的车辆数组
        };
        var origData = self.oGrid.gridData;
        for (var i = 0; i < newArr.length; i++) {
            temp[newArr[i].Id] = true;//巧妙地方：把数组B的值当成临时数组1的键并赋值为真
        };
        for (var i = 0; i < origData.dataList.length; i++) {
            if (!temp[origData.dataList[i].Id]) {
                reformVehicles = {
                    VehicleId: origData.dataList[i].VehicleId,//表格里的选择的Id
                    EnterpriceId: origData.dataList[i].EnterpriceId,//表格里的选择的公司Id
                    Id: origData.dataList[i].Id,//表格里的选择的公司Id
                    UploadSiteId: UploadSiteId,
                    Status: origData.dataList[i].Status
                }
                temparray.push(reformVehicles);//巧妙地方：同时把数组A的值当成临时数组1的键并判断是否为真，如果不为真说明没重复，就合并到一个新数组里，这样就可以得到一个全新并无重复的数组
            };
        };
        for (var i in temparray) {
            newArr.push(temparray[i]);//将选择的和为选择的数据重新组合 并更改了各自的状态
        }
        ES.loadAn($(this.oDialog.node));
        ES.getData({ Vehiclelis: newArr, Remark:$('#siteReportsInput').val()}, "/UploadSite/CheckNotPass", this.saveHandler, this);
    },
    save: function () {
        if (!$('#siteReportsInput').val()) {
            ES.aWarn("请填写审核意见"); return
        }
        var newArr = [],self = this, arrItem, temp = [], temparray = [], reformVehicles = {};
        var ids = $("#exGridContainer").jqGrid("getGridParam", "selarrrow");//获取所有选择项
        if(ids.length == 0){
            ES.aWarn("请选择车辆！"); return
        }
        var UploadSiteId = this.oGrid.gridData.exparameters.UploadSiteId;//外面表格的行Id
        for (var i = 0 ; i < ids.length; i++) {
            rowData = $("#exGridContainer").jqGrid('getRowData', ids[i]);//获取所有选择项的具体数据
            arrItem = {
                VehicleId: rowData.VehicleId,//表格里的选择的车牌号
                EnterpriceId: rowData.EnterpriceId,//表格里的选择的公司Id
                UploadSiteId: UploadSiteId,
                Id: rowData.Id,//表格里的选择的公司Id
                Status: 1
            };
            newArr.push(arrItem);//得到新的车辆数组
        }
        var origData = self.oGrid.gridData;
        for (var i = 0; i < newArr.length; i++) {

            temp[newArr[i].VehicleId] = true;//巧妙地方：把数组B的值当成临时数组1的键并赋值为真

        };

        for (var i = 0; i < origData.dataList.length; i++) {

            if (!temp[origData.dataList[i].Id]) {
                reformVehicles = {
                    VehicleId: origData.dataList[i].Id,//表格里的选择的车牌号
                    EnterpriceId: origData.dataList[i].EnterpriceId,//表格里的选择的公司Id
                    Id: origData.dataList[i].Id,//表格里的选择的公司Id
                    UploadSiteId: UploadSiteId,
                    Status: origData.dataList[i].Status
                }
                temparray.push(reformVehicles);//巧妙地方：同时把数组A的值当成临时数组1的键并判断是否为真，如果不为真说明没重复，就合并到一个新数组里，这样就可以得到一个全新并无重复的数组

            };
        };
        for (var i in temparray) {
            newArr.push(temparray[i]);//将选择的和为选择的数据重新组合 并更改了各自的状态
        }
        ES.loadAn($(this.oDialog.node));
        ES.getData({ Vehiclelis: newArr, Remark:$('#siteReportsInput').val()}, "/UploadSite/CheckPass", this.saveHandler, this)
    },

    saveHandler: function (oData) {
        ES.Common.DialogEdit.prototype.saveHandler.call(this, oData);
        if (oData.IsSuccess) {
            this._oParent.oGrid.query({});
        }
    },
});